diff --git a/base/metrics/histogram_functions.h b/base/metrics/histogram_functions.h
index 20ca685ec430c00760a72da425a3c32ece12b28c..ff0d56f0a9fd18835bdc05a8ebab4bcb5f07d9b7 100644
--- a/base/metrics/histogram_functions.h
+++ b/base/metrics/histogram_functions.h
@@ -79,7 +79,16 @@ void UmaHistogramEnumeration(std::string_view name, T sample) {
   // with a semi-useful error ("no member named 'kMaxValue' in ...").
   static_assert(static_cast<uintmax_t>(T::kMaxValue) <=
                     static_cast<uintmax_t>(INT_MAX) - 1,
-                "Enumeration's kMaxValue is out of range of INT_MAX!");
+                "Enumeration's kMaxValue is out of range of INT_MAX!");\
+  // We use negative integers when defining Brave-specific PageActionIconType
+  // values to avoid conflicting with upstream values. However,
+  // UmaHistogramEnumeration performs a DCHECK_LE to confirm that all
+  // PageActionIconType values are less than T::kMaxValue and it casts the sample
+  // to an unsigned int, so we fail the DCHECK. This override only performs the
+  // DCHECK if the sample is non-negative.
+  if (static_cast<intmax_t>(sample) < 0) {
+    return;
+  }
   DCHECK_LE(static_cast<uintmax_t>(sample),
             static_cast<uintmax_t>(T::kMaxValue));
   // While UmaHistogramExactLinearâ€™s documentation states that the third
